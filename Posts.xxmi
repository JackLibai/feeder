[[@DataLank,xxmSession,fCommon]][[!var
qr:TQueryResult;
xx:array of OleVariant;
sql,cat:string;
d,d0,f,l,id,id0,lx:integer;
d1:TDateTime;
loadMore:boolean;
]][[

cat:=Context['c'].Value;
f:=Context['f'].AsInteger;

loadMore:=Length(Values)<>0;

sql:=
  'select S.label, S.color, S.readwidth, P.id, P.title, P.pubdate, P.url, X.id as ReadID'+
  ' from Subscription S'+
  ' inner join Post P on P.feed_id=S.feed_id'+
  ' inner join UserPost X on X.post_id=P.id and X.user_id=S.user_id'+
  ' where S.user_id=?';

if loadMore then lx:=3 else lx:=0;

if cat='' then
  if f=0 then
    if Context['search'].Value='' then
     begin
      SetLength(xx,1+lx);
      xx[0]:=Session.UserID;
     end
    else
     begin
      sql:=
        'select S.label, S.color, S.readwidth, P.id, P.title, P.pubdate, P.url, X.id as ReadID'+
        ' from Subscription S'+
        ' inner join Post P on P.feed_id=S.feed_id'+
        ' left outer join UserPost X on X.post_id=P.id and X.user_id=S.user_id'+
        ' where S.user_id=? and P.title||'' ''||P.content like ?';
      SetLength(xx,2+lx);
      xx[0]:=Session.UserID;
      xx[1]:='%'+StringReplace(Context['search'].Value,' ','%',[rfReplaceAll])+'%';
     end
  else
   begin
    sql:=sql+' and S.feed_id=?';
    SetLength(xx,2+lx);
    xx[0]:=Session.UserID;
    xx[1]:=f;
   end
else 
 begin
  sql:=sql+' and S.category=?';
  SetLength(xx,2+lx);
  xx[0]:=Session.UserID;
  xx[1]:=cat;
 end;

if Context['q'].Value='' then l:=0 else l:=Context['q'].AsInteger;
if l=0 then l:=200;//default

if loadMore then
 begin
  id0:=Context['x'].AsInteger;
  qr:=TQueryResult.Create(Session.Connection,'select pubdate from Post where id=?',[id0]);
  try
    d1:=qr.GetDate(0);
  finally
    qr.Free;
  end;
  d:=Trunc(d1);
  sql:=sql+' and (P.pubdate=? and P.id>?) or (P.pubdate<?)';
  xx[Length(xx)-3]:=d1;
  xx[Length(xx)-2]:=id0;
  xx[Length(xx)-1]:=d1;
 end
else
 begin
  id0:=0;//counter warning
  d:=0;
 end;

qr:=TQueryResult.Create(Session.Connection,
  sql+' order by P.pubdate desc, P.id limit '+IntToStr(l),xx);
try
  if loadMore and qr.EOF then
    Context.SendHTML('-')
  else
   begin
    id:=0;
    while qr.Read do
     begin
      id:=qr.GetInt('id');
      d1:=qr.GetDate('pubdate')+Session.TimeBias;
      d0:=Trunc(d1);
      if d0<>d then
       begin
        <<div>
        <div class="date">>=FormatDateTime('ddd yyyy-mm-dd',d1)<</div>
        </div>>
        d:=d0;
       end;
      <<div class="post[[if qr.IsNull('ReadID') then Context.SendHTML('read');]]" id="p[[=qr['id']]]">
      <div class="date" title="[[=FormatDateTime('ddd yyyy-mm-dd hh:nn:ss',d1)]]">>=FormatDateTime('hh:nn',d1)<</div>
      [[#ShowLabel(qr.GetStr('label'),qr.GetStr('color'))]]
      <a href="[[=qr['url']]]" postqs="[[?'id',qr['id']]]" onclick="return doPost(this,event);">>#qr['title']<</a>
      </div>>
     end;

    if loadMore then
      Context.SendHTML(';'+IntToStr(id))
    else
     begin
      <<div id="trailer" style="height:100vh;border-bottom:4px solid gold;" x="[[=id]]"></div>>
     end;
   end;
finally
  qr.Free;
end;
