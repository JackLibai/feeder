[[@xxmSession,DataLank,fCommon]][[!var
s,t,lbl,cat,c:string;
id,id1,rw:integer;
qr,qr1:TQueryResult;
const
DefaultReadWidth=32;
]][[

Context.Include('dHead.xxmi');

case Context['x'].AsInteger of
  0://form
   begin
    <<form method="post" action="?">
    <input type="hidden" name="x" value="1" />
    <dl>
    <dt>URL</dt>
    <dd>
      <input type="text" name="url" style="width:80vw;" /></dd>
    <dt>name</dt>
    <dd><input type="text" name="name" value="" /> (leave empty for default //TODO: from URL data)</dd>
    <dt>category</dt>
    <dd>
      <select name="category">>
      qr1:=TQueryResult.Create(Session.Connection,'select distinct category from "Subscription" where user_id=? order by 1',[Session.UserID]);
      try
        while qr1.Read do
         begin
          <<option>>=qr1[0]<</option>>
         end;
      finally
        qr1.Free;
      end;
      <<option value="---" style="color:#006600;">&rarr; new category</option>
      </select>
      <input type="text" name="categoryNew" />
    </dd>
    <dt>label text</dt>
    <dd><input type="text" name="label" value="" /> (leave empty for default: feed name)</dd>
    <dt>label color</dt>
    <dd>>#ColorPicker('CCCCCC')<</dd>
    <dt>read width</dt>
    <dd><input type="text" name="readwidth" value="[[=integer(DefaultReadWidth)]]" style="width:4em;" /> M-width</dd>
    </dl>
    </dl>
    <p><input type="submit" value="Add" /></p>
    </form>
    <p><a href="Feeds.xxm">back</a></p>>
   end;
  1://add new
   begin

    s:=Context['url'].Value;

    //TODO: sanity checks?
    //TODO: first GET here? (or IPC call to feeder eater)
    if (Copy(s,1,7)<>'http://') and (Copy(s,1,8)<>'https://') then
      //raise Exception.Create('HTTP/HTTPS URL required');
      s:='http://'+s;

    t:=Context['name'].Value;
    qr:=TQueryResult.Create(Session.Connection,'select id, name from "Feed" where url=?',[s]);
    try
      if qr.EOF then id:=0 else
       begin
        id:=qr.GetInt(0);
        t:=qr.GetStr(1);
       end;
    finally
      qr.Free;
    end;
    if id=0 then
     begin
      if t='' then t:=NameFromFeedURL(s);
      id:=Session.Connection.Insert('Feed',['name',t,'url',s,'created',UtcNow],'id');
      <<p>Feed added. Posts may not appear until first time the fetching schedule loaded current posts.</p>>
     end
    else
     begin
      Session.Connection.Execute('insert into "UserPost" (user_id,post_id) select ?,id from "Post" where feed_id=? and pubDate>?',
        [Session.UserID,id,UtcNow-366.0]);
      <<p>Feed found, listing posts up to one year old as unread.</p>>
     end;

    qr:=TQueryResult.Create(Session.Connection,'select id from "Subscription" where user_id=? and feed_id=?',[Session.UserID,id]);
    try
      if qr.EOF then id1:=0 else id1:=qr.GetInt(0);
    finally
      qr.Free;
    end;
    if id1=0 then
     begin
      lbl:=Context['label'].Value;
      if lbl='' then lbl:=t;
      cat:=Context['category'].Value;
      if cat='---' then cat:=Context['categoryNew'].Value;
      c:=CheckColor(Context['color'].Value);
      rw:=Context['readwidth'].AsInteger;
      Session.Connection.Insert('Subscription',
        ['user_id',Session.UserID
        ,'feed_id',id
        ,'label',lbl
        ,'category',cat
        ,'color',c
        ,'readwidth',rw
        ,'created',double(UtcNow)
        ],'id');
      <<p>Subscription added</p>>
     end
    else
      begin
      //update category? (allow duplicates?)
      <<p style="color:red;">Already subscribed, not adding</p>>
      end;

    <<p>
    <a href="New.xxm">add another...</a><br />
    <a href="Feeds.xxm">back to feeds...</a><br />
    <a href=".">back to posts...</a><br />
    </p>>

   end;
  else
    raise Exception.Create('Unknown action');
end;

Context.Include('dFoot.xxmi');