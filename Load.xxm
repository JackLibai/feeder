[[@DataLank,xxmSession,fCommon]][[!var
qr:TQueryResult;
a:double;
f:integer;
d:TDateTime;
const
AvgPostsDays=100;
]][[

qr:=TQueryResult.Create(Session.Connection,
  'select *'
  +' ,(select count(*) from Subscription S where S.feed_id=F.id) as scount'
  +' from Feed F'
  +' left outer join ('
  +'   select X.feed_id, max(X.pubdate) as pl, avg(X.pd) as pa'
  +'   from('
  +'     select'
  +'     P1.feed_id, P1.pubdate, min(P2.pubdate-P1.pubdate) as pd'
  +'     from Post P1'
  +'     inner join Post P2 on P2.feed_id=P1.feed_id and P2.pubdate>P1.pubdate'
  +'     where P1.pubdate>?'
  +'     group by P1.feed_id, P1.pubdate'
  +'   ) X'
  +'   group by X.feed_id'
  +' ) X on X.feed_id=F.id'
  ,[UtcNow-AvgPostsDays]
);
try
  <<style>
  TH,TD{font-family:"PT Sans",Calibri,sans-serif;font-size:0.7em;white-space:nowrap;border:1px solid #CCCCCC;}
  TD.n{max-width:12em;overflow:hidden;text-overflow:ellipsis;}
  DIV.flag{display:inline;padding:2pt;border-radius:4pt;white-space:nowrap;}
  </style>
  <table cellspacing="0" cellpadding="4" border="1">
  <tr>
  <th>&nbsp;</th>
  <th>name</th>
  <th>created</th>
  <th>#</th>
  <th>post:last</th>
  <th>post:avg</th>
  <th>regime</th>
  <th>load:last</th>
  <th>:since</th>
  <th>load:result</th>
  <th>load:new</th>
  <th>load:items</th>
  </tr>>
  while qr.Read do
   begin
    <<tr>
    <td style="text-align:right;">>=qr['id']<</td>
    <td class="n">>
    f:=qr.GetInt('flags');
    if (f and 1)<>0 then begin <<div class="flag" style="background-color:red;">g</div>&nbsp;[[ end;
    <<a href="[[=qr['url']]]" title="[[=qr['name']]]">>=qr['name']<</a></td>
    <td>>=FormatDateTime('yyyy-mm-dd hh:nn',qr.GetDate('created'))<</td>
    <td style="text-align:right;">>=qr['scount']<</td>>
    if qr.IsNull('pl') then begin <<td>&nbsp;</td>> end else
     begin
      <<td>>=FormatDateTime('yyyy-mm-dd hh:nn',qr.GetDate('pl'))<</td>>
     end;
    if qr.IsNull('pa') then a:=0 else a:=qr['pa'];
    if a=0.0 then
     begin <<td>&nbsp;</td>> end
    else
    if a>1.0 then
     begin <<td style="text-align:right;background-color:#FFFFCC;">>=Round(a)]] days</td>> end
    else
     begin <<td style="text-align:right;">>=Round(a*1440.0)]] mins</td>> end;
    <<td style="text-align:right;">>=qr['regime']<</td>>
    if qr.IsNull('loadlast') then begin <<td>&nbsp;</td><td>&nbsp;</td>> end else
     begin
      d:=qr.GetDate('loadlast');
      <<td>>=FormatDateTime('yyyy-mm-dd hh:nn',d)<</td>>
      a:=UtcNow-d;
      if a>1.0 then
       begin <<td style="text-align:right;background-color:#FFFFCC;">>=Round(a)]] days</td>> end
      else
       begin <<td style="text-align:right;">>=Round(a*1440.0)]] mins</td>> end;
     end;
    if (qr.GetStr('result')+'-')[1]='[' then
     begin
      <<td style="color:#CC0000;">>=qr['result']<</td>>
     end
    else
     begin
      <<td>>=qr['result']<</td>>
     end;
    <<td style="text-align:right;">>=qr['loadcount']<</td>
    <td style="text-align:right;">>=qr['itemcount']<</td>
    </tr>>
   end;
  <</table>>
finally
  qr.Free;
end;